# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class AccidentRecords(models.Model):
    shift_id = models.IntegerField(blank=True, null=True)
    situation_mines = models.CharField(max_length=255, blank=True, null=True)
    name_address = models.CharField(max_length=255, blank=True, null=True)
    vil_pin = models.CharField(max_length=255, blank=True, null=True)
    date_hour_accident = models.DateTimeField(blank=True, null=True)
    accident_location = models.CharField(max_length=255, blank=True, null=True)
    killed_num = models.IntegerField(blank=True, null=True)
    injured_num = models.IntegerField(blank=True, null=True)
    accident_cause_description = models.CharField(max_length=255, blank=True, null=True)
    person_names = models.CharField(max_length=255, blank=True, null=True)
    emp_nat = models.CharField(max_length=255, blank=True, null=True)
    age = models.IntegerField(blank=True, null=True)
    sex = models.CharField(max_length=255, blank=True, null=True)
    injury_death_cause = models.CharField(max_length=255, blank=True, null=True)
    mine = models.ForeignKey('Minedetails', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'accident_records'


class Alternateprodmodel(models.Model):
    prod_id = models.CharField(max_length=100, blank=True, null=True)
    mine_id = models.IntegerField(blank=True, null=True)
    batch_number = models.CharField(max_length=100, blank=True, null=True)
    alter_product = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'alternateprodmodel'


class AttendanceEmp(models.Model):
    mine_id = models.IntegerField(blank=True, null=True)
    shift_id = models.IntegerField(blank=True, null=True)
    emp_id = models.IntegerField(blank=True, null=True)
    ab_pr_date = models.DateField(blank=True, null=True)
    ab_pr = models.CharField(max_length=255, blank=True, null=True)
    leave_type = models.CharField(max_length=255, blank=True, null=True)
    leave_no = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'attendance_emp'


class AuthGroup(models.Model):
    name = models.CharField(unique=True, max_length=150)

    class Meta:
        managed = False
        db_table = 'auth_group'


class AuthGroupPermissions(models.Model):
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)
    permission = models.ForeignKey('AuthPermission', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_group_permissions'
        unique_together = (('group', 'permission'),)


class AuthPermission(models.Model):
    name = models.CharField(max_length=255)
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING)
    codename = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'auth_permission'
        unique_together = (('content_type', 'codename'),)


class AuthUser(models.Model):
    password = models.CharField(max_length=128)
    last_login = models.DateTimeField(blank=True, null=True)
    is_superuser = models.IntegerField()
    username = models.CharField(unique=True, max_length=150)
    first_name = models.CharField(max_length=30)
    last_name = models.CharField(max_length=150)
    email = models.CharField(unique=True, max_length=254)
    is_staff = models.IntegerField()
    is_active = models.IntegerField()
    date_joined = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'auth_user'


class AuthUserGroups(models.Model):
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_groups'
        unique_together = (('user', 'group'),)


class AuthUserUserPermissions(models.Model):
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    permission = models.ForeignKey(AuthPermission, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_user_permissions'
        unique_together = (('user', 'permission'),)


class BackgroundTask(models.Model):
    task_name = models.CharField(max_length=190)
    task_params = models.TextField()
    task_hash = models.CharField(max_length=40)
    verbose_name = models.CharField(max_length=255, blank=True, null=True)
    priority = models.IntegerField()
    run_at = models.DateTimeField()
    repeat = models.BigIntegerField()
    repeat_until = models.DateTimeField(blank=True, null=True)
    queue = models.CharField(max_length=190, blank=True, null=True)
    attempts = models.IntegerField()
    failed_at = models.DateTimeField(blank=True, null=True)
    last_error = models.TextField()
    locked_by = models.CharField(max_length=64, blank=True, null=True)
    locked_at = models.DateTimeField(blank=True, null=True)
    creator_object_id = models.PositiveIntegerField(blank=True, null=True)
    creator_content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'background_task'


class BackgroundTaskCompletedtask(models.Model):
    task_name = models.CharField(max_length=190)
    task_params = models.TextField()
    task_hash = models.CharField(max_length=40)
    verbose_name = models.CharField(max_length=255, blank=True, null=True)
    priority = models.IntegerField()
    run_at = models.DateTimeField()
    repeat = models.BigIntegerField()
    repeat_until = models.DateTimeField(blank=True, null=True)
    queue = models.CharField(max_length=190, blank=True, null=True)
    attempts = models.IntegerField()
    failed_at = models.DateTimeField(blank=True, null=True)
    last_error = models.TextField()
    locked_by = models.CharField(max_length=64, blank=True, null=True)
    locked_at = models.DateTimeField(blank=True, null=True)
    creator_object_id = models.PositiveIntegerField(blank=True, null=True)
    creator_content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'background_task_completedtask'


class BranchDetails(models.Model):
    branch_nm = models.CharField(max_length=100, blank=True, null=True)
    mine_id = models.ForeignKey('Minedetails', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'branch_details'


class Carousal(models.Model):
    file = models.CharField(max_length=100)
    active = models.CharField(max_length=1, blank=True, null=True)
    mine = models.ForeignKey('Minedetails', models.DO_NOTHING, blank=True, null=True)
    user_id = models.ForeignKey(AuthUser, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'carousal'


class CategoryDetails(models.Model):
    prod_category = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'category_details'


class ContainerDetails(models.Model):
    name_of_the_tub = models.CharField(max_length=100)
    initial_weight = models.IntegerField(blank=True, null=True)
    laden_weight = models.IntegerField(blank=True, null=True)
    weight_unit = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'container_details'


class DeductDetails(models.Model):
    deduct_date = models.DateField(blank=True, null=True)
    created_on = models.DateTimeField(blank=True, null=True)
    productdetails_id = models.IntegerField(db_column='productDetails_id', blank=True, null=True)  # Field name made lowercase.
    mine_id = models.CharField(max_length=100, blank=True, null=True)
    branch_id = models.CharField(max_length=100, blank=True, null=True)
    prod_category = models.CharField(max_length=100, blank=True, null=True)
    prod_name = models.CharField(max_length=100, blank=True, null=True)
    barcode = models.CharField(max_length=100, blank=True, null=True)
    batch_number = models.CharField(max_length=100, blank=True, null=True)
    quantity = models.IntegerField(blank=True, null=True)
    outstock = models.IntegerField(blank=True, null=True)
    updated_quantity = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'deduct_details'


class DevelopmentPermission(models.Model):
    name_of_mine = models.CharField(max_length=500, blank=True, null=True)
    name_of_owner = models.CharField(max_length=500, blank=True, null=True)
    name_of_seam_proposed = models.CharField(max_length=500, blank=True, null=True)
    total_thickness_seam = models.CharField(max_length=500, blank=True, null=True)
    thickness_of_seam_taken_under_devlopment = models.CharField(max_length=500, blank=True, null=True)
    max_min_cover_working_faces = models.CharField(max_length=500, blank=True, null=True)
    are_geo_disturbances = models.CharField(max_length=500, blank=True, null=True)
    rate_of_dip = models.CharField(max_length=500, blank=True, null=True)
    degree_of_gassiness_of_seam = models.CharField(max_length=500, blank=True, null=True)
    degree_of_gassiness_overlying_and_underlying = models.CharField(max_length=500, blank=True, null=True)
    history_fire_same_seam = models.CharField(max_length=500, blank=True, null=True)
    seam_free_from_water = models.CharField(max_length=500, blank=True, null=True)
    seam_extracted_stand_on_pillars = models.CharField(max_length=500, blank=True, null=True)
    railway = models.CharField(max_length=500, blank=True, null=True)
    public_private_road = models.CharField(max_length=500, blank=True, null=True)
    river_tank = models.CharField(max_length=500, blank=True, null=True)
    building_belong_to_owner = models.CharField(max_length=500, blank=True, null=True)
    building_not_belong_to_owner = models.CharField(max_length=500, blank=True, null=True)
    h_t_transmission_line = models.CharField(max_length=500, blank=True, null=True)
    arial_ropeway = models.CharField(max_length=500, blank=True, null=True)
    hfl = models.CharField(max_length=500, blank=True, null=True)
    damage_to_surface_structure = models.CharField(max_length=500, blank=True, null=True)
    subsided_report = models.CharField(max_length=500, blank=True, null=True)
    acquistion = models.CharField(max_length=500, blank=True, null=True)
    surface_water = models.CharField(max_length=500, blank=True, null=True)
    any_stream_lying_above_or_below = models.CharField(max_length=500, blank=True, null=True)
    from_the_adjoining_mine = models.CharField(max_length=500, blank=True, null=True)
    from_the_same_seam = models.CharField(max_length=500, blank=True, null=True)
    what_precautionary = models.CharField(max_length=500, blank=True, null=True)
    danger_from_fire = models.CharField(max_length=500, blank=True, null=True)
    danger_from_premature_collapsed = models.CharField(max_length=500, blank=True, null=True)
    ssr = models.CharField(max_length=500, blank=True, null=True)
    does_the_area_proposed = models.CharField(max_length=500, blank=True, null=True)
    whether_application = models.CharField(max_length=500, blank=True, null=True)
    are_the_plan_up_to_date = models.CharField(max_length=500, blank=True, null=True)
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'development_permission'


class DgmsCoalmineAnnualAnnexureI(models.Model):
    signature = models.CharField(max_length=100, blank=True, null=True)
    aecm_year = models.IntegerField(blank=True, null=True)
    mine_vill = models.CharField(max_length=100, blank=True, null=True)
    mine_tehsil = models.CharField(max_length=100, blank=True, null=True)
    mine_dist = models.CharField(max_length=50, blank=True, null=True)
    mine_pin = models.CharField(max_length=10, blank=True, null=True)
    mine_state = models.CharField(max_length=50, blank=True, null=True)
    mine_dop = models.DateField(blank=True, null=True)
    labour_id_no = models.CharField(max_length=100, blank=True, null=True)
    owner_name = models.CharField(max_length=100, blank=True, null=True)
    owner_telephone = models.CharField(max_length=20, blank=True, null=True)
    owner_mobile = models.CharField(max_length=20, blank=True, null=True)
    owner_email = models.CharField(max_length=50, blank=True, null=True)
    owner_vill = models.CharField(max_length=100, blank=True, null=True)
    owner_tehsil = models.CharField(max_length=100, blank=True, null=True)
    owner_dist = models.CharField(max_length=50, blank=True, null=True)
    owner_pin = models.CharField(max_length=10, blank=True, null=True)
    owner_state = models.CharField(max_length=50, blank=True, null=True)
    agent_name = models.CharField(max_length=100, blank=True, null=True)
    agent_telephone = models.CharField(max_length=20, blank=True, null=True)
    agent_mobile = models.CharField(max_length=20, blank=True, null=True)
    agent_email = models.CharField(max_length=50, blank=True, null=True)
    agent_vill = models.CharField(max_length=100, blank=True, null=True)
    agent_tehsil = models.CharField(max_length=100, blank=True, null=True)
    agent_dist = models.CharField(max_length=50, blank=True, null=True)
    agent_pin = models.CharField(max_length=10, blank=True, null=True)
    agent_state = models.CharField(max_length=50, blank=True, null=True)
    manager_name = models.CharField(max_length=100, blank=True, null=True)
    manager_telephone = models.CharField(max_length=20, blank=True, null=True)
    manager_mobile = models.CharField(max_length=20, blank=True, null=True)
    manager_email = models.CharField(max_length=50, blank=True, null=True)
    manager_vill = models.CharField(max_length=100, blank=True, null=True)
    manager_tehsil = models.CharField(max_length=100, blank=True, null=True)
    manager_dist = models.CharField(max_length=100, blank=True, null=True)
    manager_pin = models.CharField(max_length=10, blank=True, null=True)
    manager_state = models.CharField(max_length=100, blank=True, null=True)
    no_of_contractors = models.CharField(max_length=100, blank=True, null=True)
    dept_background_male = models.CharField(max_length=100, blank=True, null=True)
    dept_background_female = models.CharField(max_length=100, blank=True, null=True)
    dept_total_background_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_background_male = models.CharField(max_length=100, blank=True, null=True)
    cont_background_female = models.CharField(max_length=100, blank=True, null=True)
    cont_background_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    dept_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    dept_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    cont_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    cont_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    dept_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    dept_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    cont_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    cont_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    wbg_number = models.CharField(max_length=100, blank=True, null=True)
    wbg_day = models.DateField()
    am_number = models.CharField(max_length=100, blank=True, null=True)
    am_day = models.DateField()
    dept_tmw_background_male = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_background_female = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_background_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_background_male = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_background_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_background_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_background_male = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_background_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_background_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_background_male = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_background_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_background_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    no_of_contractors_engaged = models.CharField(max_length=100, blank=True, null=True)
    no_of_shift_worked = models.CharField(max_length=100, blank=True, null=True)
    mh_1 = models.CharField(max_length=100, blank=True, null=True)
    mh_2 = models.CharField(max_length=100, blank=True, null=True)
    mh_3 = models.CharField(max_length=100, blank=True, null=True)
    electrical_background = models.CharField(max_length=100, blank=True, null=True)
    ongs_background = models.CharField(max_length=100, blank=True, null=True)
    comp_air = models.CharField(max_length=100, blank=True, null=True)
    electrical_opencast = models.CharField(max_length=100, blank=True, null=True)
    ongs_opencast = models.CharField(max_length=100, blank=True, null=True)
    comp_air_opencast = models.CharField(max_length=100, blank=True, null=True)
    electrical_aboveground = models.CharField(max_length=100, blank=True, null=True)
    ongs_aboveground = models.CharField(max_length=100, blank=True, null=True)
    comp_air_aboveground = models.CharField(max_length=100, blank=True, null=True)
    total_electrical = models.CharField(max_length=100, blank=True, null=True)
    total_ongs = models.CharField(max_length=100, blank=True, null=True)
    total_comp_air = models.CharField(max_length=100, blank=True, null=True)
    lighting = models.CharField(max_length=100, blank=True, null=True)
    power = models.CharField(max_length=100, blank=True, null=True)
    ime_npe_dept = models.CharField(max_length=100, blank=True, null=True)
    ime_npe_cont = models.CharField(max_length=100, blank=True, null=True)
    ime_npru_dept = models.CharField(max_length=100, blank=True, null=True)
    ime_npru_cont = models.CharField(max_length=100, blank=True, null=True)
    ime_npau_dept = models.CharField(max_length=100, blank=True, null=True)
    ime_npau_cont = models.CharField(max_length=100, blank=True, null=True)
    ime_no_of_p_d_m_unfit = models.CharField(max_length=100, blank=True, null=True)
    pme_npe_dept = models.CharField(max_length=100, blank=True, null=True)
    pme_npe_cont = models.CharField(max_length=100, blank=True, null=True)
    pme_npru_dept = models.CharField(max_length=100, blank=True, null=True)
    pme_npru_cont = models.CharField(max_length=100, blank=True, null=True)
    pme_npau_dept = models.CharField(max_length=100, blank=True, null=True)
    pme_npau_cont = models.CharField(max_length=100, blank=True, null=True)
    pme_no_of_p_d_m_unfit = models.CharField(max_length=100, blank=True, null=True)
    no_of_workmen_req = models.CharField(max_length=100, blank=True, null=True)
    no_of_workmen_provide = models.CharField(max_length=100, blank=True, null=True)
    no_of_satfy_c_meeting_conduct = models.CharField(max_length=100, blank=True, null=True)
    npe_bvt_dept = models.CharField(max_length=100, blank=True, null=True)
    npe_bvt_cont = models.CharField(max_length=100, blank=True, null=True)
    npruvt_bvt_dept = models.CharField(max_length=100, blank=True, null=True)
    npruvt_bvt_cont = models.CharField(max_length=100, blank=True, null=True)
    npauvt_bvt_dept = models.CharField(max_length=100, blank=True, null=True)
    npauvt_bvt_cont = models.CharField(max_length=100, blank=True, null=True)
    npe_rt_dept = models.CharField(max_length=100, blank=True, null=True)
    npe_rt_cont = models.CharField(max_length=100, blank=True, null=True)
    npruvt_rt_dept = models.CharField(max_length=100, blank=True, null=True)
    npruvt_rt_cont = models.CharField(max_length=100, blank=True, null=True)
    npauvt_rt_dept = models.CharField(max_length=100, blank=True, null=True)
    npauvt_rt_cont = models.CharField(max_length=100, blank=True, null=True)
    mine_name = models.ForeignKey('Minedetails', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_coalmine_annual_annexure_i'


class DgmsCoalmineAnnualAnnexureISubtable1(models.Model):
    base_column_id = models.IntegerField(blank=True, null=True)
    spem_designation = models.CharField(max_length=100, blank=True, null=True)
    spem_no_requried = models.CharField(max_length=100, blank=True, null=True)
    spem_no_available = models.CharField(max_length=100, blank=True, null=True)
    spem_short_surplus = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_coalmine_annual_annexure_i_subtable_1'


class DgmsCoalmineAnnualAnnexureISubtable2(models.Model):
    base_column_id = models.IntegerField(blank=True, null=True)
    accident_statistics_year = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_fatal_number = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_fatal_no_of_persion_killed = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_fatal_no_of_persion_injured = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_serious = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_serious_injured = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_reportable_number = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_reportable_injured = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_minor_number = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_minor_injured = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_coalmine_annual_annexure_i_subtable_2'


class DgmsCoalmineAnnualAnnexureISubtable3(models.Model):
    base_column_id = models.IntegerField(blank=True, null=True)
    cre_grade = models.CharField(max_length=100, blank=True, null=True)
    cre_2 = models.CharField(max_length=100, blank=True, null=True)
    cre_3 = models.CharField(max_length=100, blank=True, null=True)
    cre_4 = models.CharField(max_length=100, blank=True, null=True)
    cre_5 = models.CharField(max_length=100, blank=True, null=True)
    cre_6 = models.CharField(max_length=100, blank=True, null=True)
    cre_7 = models.CharField(max_length=100, blank=True, null=True)
    cre_8 = models.CharField(max_length=100, blank=True, null=True)
    cre_9 = models.CharField(max_length=100, blank=True, null=True)
    cre_10 = models.CharField(max_length=100, blank=True, null=True)
    cre_11 = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_coalmine_annual_annexure_i_subtable_3'


class DgmsCoalmineTableA(models.Model):
    year = models.CharField(max_length=100, blank=True, null=True)
    working_below_ground = models.CharField(max_length=100, blank=True, null=True)
    working_below_ground_a = models.CharField(max_length=100, blank=True, null=True)
    all_mine_on = models.CharField(max_length=100, blank=True, null=True)
    all_mine_on_a = models.CharField(max_length=100, blank=True, null=True)
    below_ground_overman_sirdars_2a = models.CharField(max_length=100, blank=True, null=True)
    below_ground_overman_sirdars_2b = models.CharField(max_length=100, blank=True, null=True)
    below_ground_overman_sirdars_2c = models.CharField(max_length=100, blank=True, null=True)
    below_ground_overman_sirdars_3 = models.CharField(max_length=100, blank=True, null=True)
    below_ground_overman_sirdars_4a = models.CharField(max_length=100, blank=True, null=True)
    below_ground_overman_sirdars_4b = models.CharField(max_length=100, blank=True, null=True)
    below_ground_overman_sirdars_4c = models.CharField(max_length=100, blank=True, null=True)
    below_ground_overman_sirdars_4d = models.CharField(max_length=100, blank=True, null=True)
    below_ground_overman_sirdars_5 = models.CharField(max_length=100, blank=True, null=True)
    below_ground_miners_loader_2a = models.CharField(max_length=100, blank=True, null=True)
    below_ground_miners_loader_2b = models.CharField(max_length=100, blank=True, null=True)
    below_ground_miners_loader_2c = models.CharField(max_length=100, blank=True, null=True)
    below_ground_miners_loader_3 = models.CharField(max_length=100, blank=True, null=True)
    below_ground_miners_loader_4a = models.CharField(max_length=100, blank=True, null=True)
    below_ground_miners_loader_4b = models.CharField(max_length=100, blank=True, null=True)
    below_ground_miners_loader_4c = models.CharField(max_length=100, blank=True, null=True)
    below_ground_miners_loader_4d = models.CharField(max_length=100, blank=True, null=True)
    below_ground_miners_loader_5 = models.CharField(max_length=100, blank=True, null=True)
    below_ground_others_2a = models.CharField(max_length=100, blank=True, null=True)
    below_ground_others_2b = models.CharField(max_length=100, blank=True, null=True)
    below_ground_others_2c = models.CharField(max_length=100, blank=True, null=True)
    below_ground_others_3 = models.CharField(max_length=100, blank=True, null=True)
    below_ground_others_4a = models.CharField(max_length=100, blank=True, null=True)
    below_ground_others_4b = models.CharField(max_length=100, blank=True, null=True)
    below_ground_others_4c = models.CharField(max_length=100, blank=True, null=True)
    below_ground_others_4d = models.CharField(max_length=100, blank=True, null=True)
    below_ground_others_5 = models.CharField(max_length=100, blank=True, null=True)
    opencast_overman_sirdars_2a = models.CharField(max_length=100, blank=True, null=True)
    opencast_overman_sirdars_2b = models.CharField(max_length=100, blank=True, null=True)
    opencast_overman_sirdars_2c = models.CharField(max_length=100, blank=True, null=True)
    opencast_overman_sirdars_3 = models.CharField(max_length=100, blank=True, null=True)
    opencast_overman_sirdars_4a = models.CharField(max_length=100, blank=True, null=True)
    opencast_overman_sirdars_4b = models.CharField(max_length=100, blank=True, null=True)
    opencast_overman_sirdars_4c = models.CharField(max_length=100, blank=True, null=True)
    opencast_overman_sirdars_4d = models.CharField(max_length=100, blank=True, null=True)
    opencast_overman_sirdars_5 = models.CharField(max_length=100, blank=True, null=True)
    opencast_miners_loader_2a = models.CharField(max_length=100, blank=True, null=True)
    opencast_miners_loader_2b = models.CharField(max_length=100, blank=True, null=True)
    opencast_miners_loader_2c = models.CharField(max_length=100, blank=True, null=True)
    opencast_miners_loader_3 = models.CharField(max_length=100, blank=True, null=True)
    opencast_miners_loader_4a = models.CharField(max_length=100, blank=True, null=True)
    opencast_miners_loader_4b = models.CharField(max_length=100, blank=True, null=True)
    opencast_miners_loader_4c = models.CharField(max_length=100, blank=True, null=True)
    opencast_miners_loader_4d = models.CharField(max_length=100, blank=True, null=True)
    opencast_miners_loader_5 = models.CharField(max_length=100, blank=True, null=True)
    opencast_others_2a = models.CharField(max_length=100, blank=True, null=True)
    opencast_others_2b = models.CharField(max_length=100, blank=True, null=True)
    opencast_others_2c = models.CharField(max_length=100, blank=True, null=True)
    opencast_others_3 = models.CharField(max_length=100, blank=True, null=True)
    opencast_others_4a = models.CharField(max_length=100, blank=True, null=True)
    opencast_others_4b = models.CharField(max_length=100, blank=True, null=True)
    opencast_others_4c = models.CharField(max_length=100, blank=True, null=True)
    opencast_others_4d = models.CharField(max_length=100, blank=True, null=True)
    opencast_others_5 = models.CharField(max_length=100, blank=True, null=True)
    aboveground_clerical_supervisory_staff_2a = models.CharField(max_length=100, blank=True, null=True)
    aboveground_clerical_supervisory_staff_2b = models.CharField(max_length=100, blank=True, null=True)
    aboveground_clerical_supervisory_staff_2c = models.CharField(max_length=100, blank=True, null=True)
    aboveground_clerical_supervisory_staff_3 = models.CharField(max_length=100, blank=True, null=True)
    aboveground_clerical_supervisory_staff_4a = models.CharField(max_length=100, blank=True, null=True)
    aboveground_clerical_supervisory_staff_4b = models.CharField(max_length=100, blank=True, null=True)
    aboveground_clerical_supervisory_staff_4c = models.CharField(max_length=100, blank=True, null=True)
    aboveground_clerical_supervisory_staff_4d = models.CharField(max_length=100, blank=True, null=True)
    aboveground_clerical_supervisory_staff_5 = models.CharField(max_length=100, blank=True, null=True)
    aboveground_workers_2a = models.CharField(max_length=100, blank=True, null=True)
    aboveground_workers_2b = models.CharField(max_length=100, blank=True, null=True)
    aboveground_workers_2c = models.CharField(max_length=100, blank=True, null=True)
    aboveground_workers_3 = models.CharField(max_length=100, blank=True, null=True)
    aboveground_workers_4a = models.CharField(max_length=100, blank=True, null=True)
    aboveground_workers_4b = models.CharField(max_length=100, blank=True, null=True)
    aboveground_workers_4c = models.CharField(max_length=100, blank=True, null=True)
    aboveground_workers_4d = models.CharField(max_length=100, blank=True, null=True)
    aboveground_workers_5 = models.CharField(max_length=100, blank=True, null=True)
    aboveground_others_2a = models.CharField(max_length=100, blank=True, null=True)
    aboveground_others_2b = models.CharField(max_length=100, blank=True, null=True)
    aboveground_others_2c = models.CharField(max_length=100, blank=True, null=True)
    aboveground_others_3 = models.CharField(max_length=100, blank=True, null=True)
    aboveground_others_4a = models.CharField(max_length=100, blank=True, null=True)
    aboveground_others_4b = models.CharField(max_length=100, blank=True, null=True)
    aboveground_others_4c = models.CharField(max_length=100, blank=True, null=True)
    aboveground_others_4d = models.CharField(max_length=100, blank=True, null=True)
    aboveground_others_5 = models.CharField(max_length=100, blank=True, null=True)
    total_value = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_coalmine_table_a'


class DgmsCoalmineTableB(models.Model):
    for_own_use_generated = models.CharField(max_length=100, blank=True, null=True)
    for_own_use_purchased = models.CharField(max_length=100, blank=True, null=True)
    for_sale_generated = models.CharField(max_length=100, blank=True, null=True)
    for_sale_purchased = models.CharField(max_length=100, blank=True, null=True)
    system_of_supply_voltage = models.CharField(max_length=100, blank=True, null=True)
    system_of_supply_periodicity = models.CharField(max_length=100, blank=True, null=True)
    system_of_supply_source = models.CharField(max_length=100, blank=True, null=True)
    above_ground_lighting = models.CharField(max_length=100, blank=True, null=True)
    below_ground_lighting = models.CharField(max_length=100, blank=True, null=True)
    above_ground_power = models.CharField(max_length=100, blank=True, null=True)
    below_ground_power = models.CharField(max_length=100, blank=True, null=True)
    high_pressure = models.CharField(max_length=100, blank=True, null=True)
    medium_pressure = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_winding = models.CharField(db_column='in_use_number_of_units_Winding', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_total_hp_winding = models.CharField(db_column='in_use_total_hp_Winding', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_number_of_units_winding = models.CharField(db_column='in_reserve_number_of_units_Winding', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_total_hp_winding = models.CharField(db_column='in_reserve_total_hp_Winding', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_number_of_units_ventilation = models.CharField(db_column='in_use_number_of_units_Ventilation', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_total_hp_ventilation = models.CharField(db_column='in_use_total_hp_Ventilation', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_number_of_units_ventilation = models.CharField(db_column='in_reserve_number_of_units_Ventilation', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_total_hp_ventilation = models.CharField(db_column='in_reserve_total_hp_Ventilation', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_number_of_units_haulage = models.CharField(db_column='in_use_number_of_units_Haulage', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_total_hp_haulage = models.CharField(db_column='in_use_total_hp_Haulage', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_number_of_units_haulage = models.CharField(db_column='in_reserve_number_of_units_Haulage', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_total_hp_haulage = models.CharField(db_column='in_reserve_total_hp_Haulage', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_number_of_pumping = models.CharField(db_column='in_use_number_of_Pumping', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_total_hp_pumping = models.CharField(db_column='in_use_total_hp_Pumping', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_number_of_units_pumping = models.CharField(db_column='in_reserve_number_of_units_Pumping', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_total_hp_pumping = models.CharField(db_column='in_reserve_total_hp_Pumping', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_number_of_units_coal_washing = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_coal_washing = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_coal_washing = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_coal_washing = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_unit_workshop = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_workshop = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_workshop = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_workshop = models.CharField(max_length=100, blank=True, null=True)
    specify1 = models.CharField(max_length=100, blank=True, null=True)
    specify1_in_use_no_of_unit = models.CharField(max_length=100, blank=True, null=True)
    specify1_in_use_total_hp = models.CharField(max_length=100, blank=True, null=True)
    specify1_in_reverse_number_of_unit = models.CharField(max_length=100, blank=True, null=True)
    specify1_in_reverse_total_hp = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_winding1 = models.CharField(db_column='in_use_number_of_units_Winding1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_total_hp_winding1 = models.CharField(db_column='in_use_total_hp_Winding1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_number_of_units_winding1 = models.CharField(db_column='in_reserve_number_of_units_Winding1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_total_hp_winding1 = models.CharField(db_column='in_reserve_total_hp_Winding1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_number_of_units_haulage1 = models.CharField(db_column='in_use_number_of_units_Haulage1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_total_hp_haulage1 = models.CharField(db_column='in_use_total_hp_Haulage1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_number_of_units_haulage1 = models.CharField(db_column='in_reserve_number_of_units_Haulage1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_total_hp_haulage1 = models.CharField(db_column='in_reserve_total_hp_Haulage1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_number_of_units_ventilation1 = models.CharField(db_column='in_use_number_of_units_Ventilation1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_total_hp_ventilation1 = models.CharField(db_column='in_use_total_hp_Ventilation1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_number_of_units_ventilation1 = models.CharField(db_column='in_reserve_number_of_units_Ventilation1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_total_hp_ventilation1 = models.CharField(db_column='in_reserve_total_hp_Ventilation1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_number_of_pumping1 = models.CharField(db_column='in_use_number_of_Pumping1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_total_hp_pumping1 = models.CharField(db_column='in_use_total_hp_Pumping1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_number_of_units_pumping1 = models.CharField(db_column='in_reserve_number_of_units_Pumping1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_total_hp_pumping1 = models.CharField(db_column='in_reserve_total_hp_Pumping1', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_number_of_other_portable_machines = models.CharField(db_column='in_use_number_of_Other_portable_machines', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_total_hp_other_portable_machines = models.CharField(db_column='in_use_total_hp_Other_portable_machines', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_number_of_units_other_portable_machines = models.CharField(db_column='in_reserve_number_of_units_Other_portable_machines', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_total_hp_other_portable_machines = models.CharField(db_column='in_reserve_total_hp_Other_portable_machines', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_number_of_conveyors = models.CharField(db_column='in_use_number_of_Conveyors', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_total_hp_conveyors = models.CharField(db_column='in_use_total_hp_Conveyors', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_number_of_units_conveyors = models.CharField(db_column='in_reserve_number_of_units_Conveyors', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_total_hp_conveyors = models.CharField(db_column='in_reserve_total_hp_Conveyors', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_number_of_units_electric_traction = models.CharField(db_column='in_use_number_of_units_Electric_traction', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_use_total_hp_electric_traction = models.CharField(db_column='in_use_total_hp_Electric_traction', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_number_of_units_electric_traction = models.CharField(db_column='in_reserve_number_of_units_Electric_traction', max_length=100, blank=True, null=True)  # Field name made lowercase.
    in_reserve_total_hp_electric_traction = models.CharField(db_column='in_reserve_total_hp_Electric_traction', max_length=100, blank=True, null=True)  # Field name made lowercase.
    specify2 = models.CharField(max_length=100, blank=True, null=True)
    specify2_in_use_no_of_unit = models.CharField(max_length=100, blank=True, null=True)
    specify2_in_use_total_hp = models.CharField(max_length=100, blank=True, null=True)
    specify2_in_reverse_number_of_unit = models.CharField(max_length=100, blank=True, null=True)
    specify2_in_reverse_total_hp = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_b_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_b_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_number_of_units_b_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_total_hp_b_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_b_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_b_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_number_of_units_b_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_total_hp_b_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_b_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_b_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_number_of_units_b_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_total_hp_b_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_b_coal_cutting_machine = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_b_coal_cutting_machine = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_number_of_units_b_coal_cutting_machine = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_total_hp_b_coal_cutting_machine = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_b_portable_machine = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_b_portable_machine = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_number_of_units_b_portable_machine = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_total_hp_b_portable_machine = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_b_conveyors = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_b_conveyors = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_number_of_units_b_conveyors = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_total_hp_b_conveyors = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_b_electric_traction = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_b_electric_traction = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_number_of_units_b_electric_traction = models.CharField(max_length=100, blank=True, null=True)
    in_reverse_total_hp_b_electric_traction = models.CharField(max_length=100, blank=True, null=True)
    specify3 = models.CharField(max_length=100, blank=True, null=True)
    specify3_in_use_no_of_unit = models.CharField(max_length=100, blank=True, null=True)
    specify3_in_use_total_hp = models.CharField(max_length=100, blank=True, null=True)
    specify3_in_reverse_number_of_unit = models.CharField(max_length=100, blank=True, null=True)
    specify3_in_reverse_total_hp = models.CharField(max_length=100, blank=True, null=True)
    total_1 = models.CharField(max_length=100, blank=True, null=True)
    total_2 = models.CharField(max_length=100, blank=True, null=True)
    total_3 = models.CharField(max_length=100, blank=True, null=True)
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'dgms_coalmine_table_b'


class DgmsCoalmineTableC(models.Model):
    in_use_number_of_units_boilers = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_boilers = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_boilers = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_boilers = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_steam_turbines = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_steam_turbines = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_steam_turbines = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_steam_turbines = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_diesel_engines = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_diesel_engines = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_diesel_engines = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_diesel_engines = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_gasoline = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_gasoline = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_gasoline = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_gasoline = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_hydraulic_turbines = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_hydraulic_turbines = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_hydraulic_turbines = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_hydraulic_turbines = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_air_compressors = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_air_compressors = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_air_compressors = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_air_compressors = models.CharField(max_length=100, blank=True, null=True)
    total1 = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_winding = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_winding = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_winding = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_winding = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_mineral_dressing_plants = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_mineral_dressing_plants = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_mineral_dressing_plants = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_mineral_dressing_plants = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_workshops = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_workshops = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_workshops = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_workshops = models.CharField(max_length=100, blank=True, null=True)
    specify1 = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_specify1 = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_specify1 = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_specify1 = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_specify1 = models.CharField(max_length=100, blank=True, null=True)
    total2 = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_iii_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_iii_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_iii_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_iii_haulage = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_iii_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_iii_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_iii_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_iii_ventilation = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_iii_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_iii_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_iii_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_iii_pumping = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_iii_locomotives = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_iii_locomotives = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_iii_locomotives = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_iii_locomotives = models.CharField(max_length=100, blank=True, null=True)
    specify2 = models.CharField(max_length=100, blank=True, null=True)
    in_use_number_of_units_specify2 = models.CharField(max_length=100, blank=True, null=True)
    in_use_total_hp_specify2 = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_number_of_units_specify2 = models.CharField(max_length=100, blank=True, null=True)
    in_reserve_total_hp_specify2 = models.CharField(max_length=100, blank=True, null=True)
    total3 = models.CharField(max_length=100, blank=True, null=True)
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'dgms_coalmine_table_c'


class DgmsCoalmineTableD(models.Model):
    name_of_explosive = models.CharField(max_length=100, blank=True, null=True)
    quantity = models.CharField(max_length=100, blank=True, null=True)
    electric = models.CharField(max_length=100, blank=True, null=True)
    ordinary = models.CharField(max_length=100, blank=True, null=True)
    name_and_type_of_safty_lamps = models.CharField(max_length=100, blank=True, null=True)
    lead_rivet = models.CharField(max_length=100, blank=True, null=True)
    magnetic = models.CharField(max_length=100, blank=True, null=True)
    other = models.CharField(max_length=100, blank=True, null=True)
    name_and_size_of_mech_ventilator = models.CharField(max_length=100, blank=True, null=True)
    position = models.CharField(max_length=100, blank=True, null=True)
    avarage_total_quantity = models.CharField(max_length=100, blank=True, null=True)
    water_gauge_obtaied = models.CharField(max_length=100, blank=True, null=True)
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'dgms_coalmine_table_d'


class DgmsCoalmineTableE(models.Model):
    coal_openstock_year = models.IntegerField(blank=True, null=True)
    coal_endstock_year = models.IntegerField(blank=True, null=True)
    coke_openstock_year = models.IntegerField(blank=True, null=True)
    coke_endstock_year = models.IntegerField(blank=True, null=True)
    selected_a_openstock = models.CharField(max_length=100, blank=True, null=True)
    selected_a_coal_raised = models.CharField(max_length=100, blank=True, null=True)
    selected_a_total_value_of_rasing = models.CharField(max_length=100, blank=True, null=True)
    selected_a_total_of_col_2_3 = models.CharField(max_length=100, blank=True, null=True)
    selected_a_coal_despatched = models.CharField(max_length=100, blank=True, null=True)
    selected_a_collery_consumption = models.CharField(max_length=100, blank=True, null=True)
    selected_a_coal_used_for_cooking = models.CharField(max_length=100, blank=True, null=True)
    selected_a_shortage_due_to_cause = models.CharField(max_length=100, blank=True, null=True)
    selected_a_closing_stocks = models.CharField(max_length=100, blank=True, null=True)
    selected_a_total_columns = models.CharField(max_length=100, blank=True, null=True)
    selected_b_openstock = models.CharField(max_length=100, blank=True, null=True)
    selected_b_coal_raised = models.CharField(max_length=100, blank=True, null=True)
    selected_b_total_value_of_rasing = models.CharField(max_length=100, blank=True, null=True)
    selected_b_total_of_col_2_3 = models.CharField(max_length=100, blank=True, null=True)
    selected_b_coal_despatched = models.CharField(max_length=100, blank=True, null=True)
    selected_b_collery_consumption = models.CharField(max_length=100, blank=True, null=True)
    selected_b_coal_used_for_cooking = models.CharField(max_length=100, blank=True, null=True)
    selected_b_shortage_due_to_cause = models.CharField(max_length=100, blank=True, null=True)
    selected_b_closing_stocks = models.CharField(max_length=100, blank=True, null=True)
    selected_b_total_columns = models.CharField(max_length=100, blank=True, null=True)
    grade_1_openstock = models.CharField(max_length=100, blank=True, null=True)
    grade_1_coal_raised = models.CharField(max_length=100, blank=True, null=True)
    grade_1_total_value_of_rasing = models.CharField(max_length=100, blank=True, null=True)
    grade_1_total_of_col_2_3 = models.CharField(max_length=100, blank=True, null=True)
    grade_1_coal_despatched = models.CharField(max_length=100, blank=True, null=True)
    grade_1_collery_consumption = models.CharField(max_length=100, blank=True, null=True)
    grade_1_coal_used_for_cooking = models.CharField(max_length=100, blank=True, null=True)
    grade_1_shortage_due_to_cause = models.CharField(max_length=100, blank=True, null=True)
    grade_1_closing_stocks = models.CharField(max_length=100, blank=True, null=True)
    grade_1_total_columns = models.CharField(max_length=100, blank=True, null=True)
    grade_2_openstock = models.CharField(max_length=100, blank=True, null=True)
    grade_2_coal_raised = models.CharField(max_length=100, blank=True, null=True)
    grade_2_total_value_of_rasing = models.CharField(max_length=100, blank=True, null=True)
    grade_2_total_of_col_2_3 = models.CharField(max_length=100, blank=True, null=True)
    grade_2_coal_despatched = models.CharField(max_length=100, blank=True, null=True)
    grade_2_collery_consumption = models.CharField(max_length=100, blank=True, null=True)
    grade_2_coal_used_for_cooking = models.CharField(max_length=100, blank=True, null=True)
    grade_2_shortage_due_to_cause = models.CharField(max_length=100, blank=True, null=True)
    grade_2_closing_stocks = models.CharField(max_length=100, blank=True, null=True)
    grade_2_total_columns = models.CharField(max_length=100, blank=True, null=True)
    grade_3_openstock = models.CharField(max_length=100, blank=True, null=True)
    grade_3_coal_raised = models.CharField(max_length=100, blank=True, null=True)
    grade_3_total_value_of_rasing = models.CharField(max_length=100, blank=True, null=True)
    grade_3_total_of_col_2_3 = models.CharField(max_length=100, blank=True, null=True)
    grade_3_coal_despatched = models.CharField(max_length=100, blank=True, null=True)
    grade_3_collery_consumption = models.CharField(max_length=100, blank=True, null=True)
    grade_3_coal_used_for_cooking = models.CharField(max_length=100, blank=True, null=True)
    grade_3_shortage_due_to_cause = models.CharField(max_length=100, blank=True, null=True)
    grade_3_closing_stocks = models.CharField(max_length=100, blank=True, null=True)
    grade_3_total_columns = models.CharField(max_length=100, blank=True, null=True)
    openstock_total = models.CharField(max_length=100, blank=True, null=True)
    coal_raised_total = models.CharField(max_length=100, blank=True, null=True)
    total_value_of_rasing_total = models.CharField(max_length=100, blank=True, null=True)
    total_of_col_2_3_total = models.CharField(max_length=100, blank=True, null=True)
    coal_despatched_total = models.CharField(max_length=100, blank=True, null=True)
    collery_consumption_total = models.CharField(max_length=100, blank=True, null=True)
    coal_used_for_cooking_total = models.CharField(max_length=100, blank=True, null=True)
    shortage_due_to_cause_total = models.CharField(max_length=100, blank=True, null=True)
    closing_stocks_total = models.CharField(max_length=100, blank=True, null=True)
    total_columns_total = models.CharField(max_length=100, blank=True, null=True)
    coke_hard_opening_stock = models.CharField(max_length=100, blank=True, null=True)
    coke_hard_coke_manufactured = models.CharField(max_length=100, blank=True, null=True)
    coke_hard_total_value_of_coke = models.CharField(max_length=100, blank=True, null=True)
    coke_hard_total_col_2_3 = models.CharField(max_length=100, blank=True, null=True)
    coke_hard_coke_despatched = models.CharField(max_length=100, blank=True, null=True)
    coke_hard_colliery_consumption = models.CharField(max_length=100, blank=True, null=True)
    coke_hard_coke_shortage = models.CharField(max_length=100, blank=True, null=True)
    coke_hard_closing_stock = models.CharField(max_length=100, blank=True, null=True)
    coke_hard_total_column_total = models.CharField(max_length=100, blank=True, null=True)
    coke_soft_opening_stock = models.CharField(max_length=100, blank=True, null=True)
    coke_soft_coke_manufactured = models.CharField(max_length=100, blank=True, null=True)
    coke_soft_total_value_of_coke = models.CharField(max_length=100, blank=True, null=True)
    coke_soft_total_col_2_3 = models.CharField(max_length=100, blank=True, null=True)
    coke_soft_coke_despatched = models.CharField(max_length=100, blank=True, null=True)
    coke_soft_colliery_consumption = models.CharField(max_length=100, blank=True, null=True)
    coke_soft_coke_shortage = models.CharField(max_length=100, blank=True, null=True)
    coke_soft_closing_stock = models.CharField(max_length=100, blank=True, null=True)
    coke_soft_total_column_total = models.CharField(max_length=100, blank=True, null=True)
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'dgms_coalmine_table_e'


class DgmsFirstScheduleFormIii(models.Model):
    signature = models.CharField(max_length=100, blank=True, null=True)
    year = models.IntegerField(blank=True, null=True)
    mine_address = models.CharField(max_length=500, blank=True, null=True)
    mine_dop = models.DateField(blank=True, null=True)
    mine_doc = models.DateField(blank=True, null=True)
    mine_district = models.CharField(max_length=100, blank=True, null=True)
    mine_state = models.CharField(max_length=100, blank=True, null=True)
    owner_name = models.CharField(max_length=100, blank=True, null=True)
    owner_address = models.CharField(max_length=500, blank=True, null=True)
    managing_agent = models.CharField(max_length=100, blank=True, null=True)
    managing_agent_address = models.CharField(max_length=500, blank=True, null=True)
    agent_name = models.CharField(max_length=100, blank=True, null=True)
    agent_address = models.CharField(max_length=500, blank=True, null=True)
    manager_name = models.CharField(max_length=100, blank=True, null=True)
    manager_address = models.CharField(max_length=500, blank=True, null=True)
    superior_supervisory_staff = models.CharField(max_length=100, blank=True, null=True)
    whether_machinery_is_used = models.CharField(max_length=100, blank=True, null=True)
    nature_of_power_used = models.CharField(max_length=100, blank=True, null=True)
    a_to_f_fillerd_and_attached = models.CharField(max_length=100, blank=True, null=True)
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()
    mine_name = models.ForeignKey('Minedetails', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_first_schedule_form_iii'


class DgmsMetelliferousmineAnnualAnnexureIi(models.Model):
    signature = models.CharField(max_length=100, blank=True, null=True)
    aecm_year = models.IntegerField(blank=True, null=True)
    mine_vill = models.CharField(max_length=100, blank=True, null=True)
    mine_tehsil = models.CharField(max_length=100, blank=True, null=True)
    mine_dist = models.CharField(max_length=50, blank=True, null=True)
    mine_pin = models.CharField(max_length=10, blank=True, null=True)
    mine_state = models.CharField(max_length=50, blank=True, null=True)
    mine_dop = models.DateField(blank=True, null=True)
    labour_id_no = models.CharField(max_length=100, blank=True, null=True)
    owner_name = models.CharField(max_length=100, blank=True, null=True)
    owner_telephone = models.CharField(max_length=20, blank=True, null=True)
    owner_mobile = models.CharField(max_length=20, blank=True, null=True)
    owner_email = models.CharField(max_length=50, blank=True, null=True)
    owner_vill = models.CharField(max_length=100, blank=True, null=True)
    owner_tehsil = models.CharField(max_length=100, blank=True, null=True)
    owner_dist = models.CharField(max_length=50, blank=True, null=True)
    owner_pin = models.CharField(max_length=10, blank=True, null=True)
    owner_state = models.CharField(max_length=50, blank=True, null=True)
    agent_name = models.CharField(max_length=100, blank=True, null=True)
    agent_telephone = models.CharField(max_length=20, blank=True, null=True)
    agent_mobile = models.CharField(max_length=20, blank=True, null=True)
    agent_email = models.CharField(max_length=50, blank=True, null=True)
    agent_vill = models.CharField(max_length=100, blank=True, null=True)
    agent_tehsil = models.CharField(max_length=100, blank=True, null=True)
    agent_dist = models.CharField(max_length=50, blank=True, null=True)
    agent_pin = models.CharField(max_length=10, blank=True, null=True)
    agent_state = models.CharField(max_length=50, blank=True, null=True)
    manager_name = models.CharField(max_length=100, blank=True, null=True)
    manager_telephone = models.CharField(max_length=20, blank=True, null=True)
    manager_mobile = models.CharField(max_length=20, blank=True, null=True)
    manager_email = models.CharField(max_length=50, blank=True, null=True)
    manager_vill = models.CharField(max_length=100, blank=True, null=True)
    manager_tehsil = models.CharField(max_length=100, blank=True, null=True)
    manager_dist = models.CharField(max_length=100, blank=True, null=True)
    manager_pin = models.CharField(max_length=10, blank=True, null=True)
    manager_state = models.CharField(max_length=100, blank=True, null=True)
    no_of_contractors = models.CharField(max_length=100, blank=True, null=True)
    dept_background_male = models.CharField(max_length=100, blank=True, null=True)
    dept_background_female = models.CharField(max_length=100, blank=True, null=True)
    dept_total_background_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_background_male = models.CharField(max_length=100, blank=True, null=True)
    cont_background_female = models.CharField(max_length=100, blank=True, null=True)
    cont_background_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    dept_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    dept_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    cont_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    cont_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    dept_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    dept_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    cont_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    cont_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    wbg_number = models.CharField(max_length=100, blank=True, null=True)
    wbg_day = models.DateField()
    am_number = models.CharField(max_length=100, blank=True, null=True)
    am_day = models.DateField()
    dept_tmw_background_male = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_background_female = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_background_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_background_male = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_background_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_background_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_background_male = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_background_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_background_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_background_male = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_background_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_background_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_opencast_male = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_opencast_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_opencast_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_aboveground_male = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_aboveground_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_aboveground_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    no_of_contractors_engaged = models.CharField(max_length=100, blank=True, null=True)
    no_of_shift_worked = models.CharField(max_length=100, blank=True, null=True)
    mh_1 = models.CharField(max_length=100, blank=True, null=True)
    mh_2 = models.CharField(max_length=100, blank=True, null=True)
    mh_3 = models.CharField(max_length=100, blank=True, null=True)
    explosive_used_in_the_mine = models.CharField(max_length=100, blank=True, null=True)
    electrical_background = models.CharField(max_length=100, blank=True, null=True)
    ongs_background = models.CharField(max_length=100, blank=True, null=True)
    comp_air = models.CharField(max_length=100, blank=True, null=True)
    electrical_opencast = models.CharField(max_length=100, blank=True, null=True)
    ongs_opencast = models.CharField(max_length=100, blank=True, null=True)
    comp_air_opencast = models.CharField(max_length=100, blank=True, null=True)
    electrical_aboveground = models.CharField(max_length=100, blank=True, null=True)
    ongs_aboveground = models.CharField(max_length=100, blank=True, null=True)
    comp_air_aboveground = models.CharField(max_length=100, blank=True, null=True)
    total_electrical = models.CharField(max_length=100, blank=True, null=True)
    total_ongs = models.CharField(max_length=100, blank=True, null=True)
    total_comp_air = models.CharField(max_length=100, blank=True, null=True)
    lighting = models.CharField(max_length=100, blank=True, null=True)
    power = models.CharField(max_length=100, blank=True, null=True)
    ime_npe_dept = models.CharField(max_length=100, blank=True, null=True)
    ime_npe_cont = models.CharField(max_length=100, blank=True, null=True)
    ime_npru_dept = models.CharField(max_length=100, blank=True, null=True)
    ime_npru_cont = models.CharField(max_length=100, blank=True, null=True)
    ime_npau_dept = models.CharField(max_length=100, blank=True, null=True)
    ime_npau_cont = models.CharField(max_length=100, blank=True, null=True)
    ime_no_of_p_d_m_unfit = models.CharField(max_length=100, blank=True, null=True)
    pme_npe_dept = models.CharField(max_length=100, blank=True, null=True)
    pme_npe_cont = models.CharField(max_length=100, blank=True, null=True)
    pme_npru_dept = models.CharField(max_length=100, blank=True, null=True)
    pme_npru_cont = models.CharField(max_length=100, blank=True, null=True)
    pme_npau_dept = models.CharField(max_length=100, blank=True, null=True)
    pme_npau_cont = models.CharField(max_length=100, blank=True, null=True)
    pme_no_of_p_d_m_unfit = models.CharField(max_length=100, blank=True, null=True)
    no_of_workmen_req = models.CharField(max_length=100, blank=True, null=True)
    no_of_workmen_provide = models.CharField(max_length=100, blank=True, null=True)
    no_of_satfy_c_meeting_conduct = models.CharField(max_length=100, blank=True, null=True)
    npe_bvt_dept = models.CharField(max_length=100, blank=True, null=True)
    npe_bvt_cont = models.CharField(max_length=100, blank=True, null=True)
    npruvt_bvt_dept = models.CharField(max_length=100, blank=True, null=True)
    npruvt_bvt_cont = models.CharField(max_length=100, blank=True, null=True)
    npauvt_bvt_dept = models.CharField(max_length=100, blank=True, null=True)
    npauvt_bvt_cont = models.CharField(max_length=100, blank=True, null=True)
    npe_rt_dept = models.CharField(max_length=100, blank=True, null=True)
    npe_rt_cont = models.CharField(max_length=100, blank=True, null=True)
    npruvt_rt_dept = models.CharField(max_length=100, blank=True, null=True)
    npruvt_rt_cont = models.CharField(max_length=100, blank=True, null=True)
    npauvt_rt_dept = models.CharField(max_length=100, blank=True, null=True)
    npauvt_rt_cont = models.CharField(max_length=100, blank=True, null=True)
    mine_name = models.ForeignKey('Minedetails', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_metelliferousmine_annual_annexure_ii'


class DgmsMetelliferousmineAnnualAnnexureIiSubtable1(models.Model):
    base_column_id = models.IntegerField(blank=True, null=True)
    spem_designation = models.CharField(max_length=100, blank=True, null=True)
    spem_no_requried = models.CharField(max_length=100, blank=True, null=True)
    spem_no_available = models.CharField(max_length=100, blank=True, null=True)
    spem_short_surplus = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_metelliferousmine_annual_annexure_ii_subtable_1'


class DgmsMetelliferousmineAnnualAnnexureIiSubtable2(models.Model):
    base_column_id = models.IntegerField(blank=True, null=True)
    accident_statistics_year = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_fatal_number = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_fatal_no_of_persion_killed = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_fatal_no_of_persion_injured = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_serious = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_serious_injured = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_reportable_number = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_reportable_injured = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_minor_number = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_minor_injured = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_metelliferousmine_annual_annexure_ii_subtable_2'


class DgmsMetelliferousmineAnnualAnnexureIiSubtable3(models.Model):
    base_column_id = models.IntegerField(blank=True, null=True)
    cre_1 = models.CharField(max_length=100, blank=True, null=True)
    cre_2 = models.CharField(max_length=100, blank=True, null=True)
    cre_3 = models.CharField(max_length=100, blank=True, null=True)
    cre_4 = models.CharField(max_length=100, blank=True, null=True)
    cre_5 = models.CharField(max_length=100, blank=True, null=True)
    cre_6 = models.CharField(max_length=100, blank=True, null=True)
    cre_7 = models.CharField(max_length=100, blank=True, null=True)
    cre_8 = models.CharField(max_length=100, blank=True, null=True)
    cre_9 = models.CharField(max_length=100, blank=True, null=True)
    cre_10 = models.CharField(max_length=100, blank=True, null=True)
    cre_11 = models.CharField(max_length=100, blank=True, null=True)
    cre_12 = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_metelliferousmine_annual_annexure_ii_subtable_3'


class DgmsOilminesAnnualAnnexureIii(models.Model):
    signature = models.CharField(max_length=100, blank=True, null=True)
    aecm_year = models.IntegerField(blank=True, null=True)
    mine_vill = models.CharField(max_length=100, blank=True, null=True)
    mine_tehsil = models.CharField(max_length=100, blank=True, null=True)
    mine_dist = models.CharField(max_length=50, blank=True, null=True)
    mine_pin = models.CharField(max_length=10, blank=True, null=True)
    mine_state = models.CharField(max_length=50, blank=True, null=True)
    mine_dop = models.DateField(blank=True, null=True)
    labour_id_no = models.CharField(max_length=100, blank=True, null=True)
    owner_name = models.CharField(max_length=100, blank=True, null=True)
    owner_telephone = models.CharField(max_length=20, blank=True, null=True)
    owner_mobile = models.CharField(max_length=20, blank=True, null=True)
    owner_email = models.CharField(max_length=50, blank=True, null=True)
    owner_vill = models.CharField(max_length=100, blank=True, null=True)
    owner_tehsil = models.CharField(max_length=100, blank=True, null=True)
    owner_dist = models.CharField(max_length=50, blank=True, null=True)
    owner_pin = models.CharField(max_length=10, blank=True, null=True)
    owner_state = models.CharField(max_length=50, blank=True, null=True)
    agent_name = models.CharField(max_length=100, blank=True, null=True)
    agent_telephone = models.CharField(max_length=20, blank=True, null=True)
    agent_mobile = models.CharField(max_length=20, blank=True, null=True)
    agent_email = models.CharField(max_length=50, blank=True, null=True)
    agent_vill = models.CharField(max_length=100, blank=True, null=True)
    agent_tehsil = models.CharField(max_length=100, blank=True, null=True)
    agent_dist = models.CharField(max_length=50, blank=True, null=True)
    agent_pin = models.CharField(max_length=10, blank=True, null=True)
    agent_state = models.CharField(max_length=50, blank=True, null=True)
    manager_name = models.CharField(max_length=100, blank=True, null=True)
    manager_telephone = models.CharField(max_length=20, blank=True, null=True)
    manager_mobile = models.CharField(max_length=20, blank=True, null=True)
    manager_email = models.CharField(max_length=50, blank=True, null=True)
    manager_vill = models.CharField(max_length=100, blank=True, null=True)
    manager_tehsil = models.CharField(max_length=100, blank=True, null=True)
    manager_dist = models.CharField(max_length=100, blank=True, null=True)
    manager_pin = models.CharField(max_length=10, blank=True, null=True)
    manager_state = models.CharField(max_length=100, blank=True, null=True)
    no_of_contractors = models.CharField(max_length=100, blank=True, null=True)
    classification = models.CharField(max_length=100, blank=True, null=True)
    dept_male = models.CharField(max_length=100, blank=True, null=True)
    dept_female = models.CharField(max_length=100, blank=True, null=True)
    dept_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_male = models.CharField(max_length=100, blank=True, null=True)
    cont_female = models.CharField(max_length=100, blank=True, null=True)
    cont_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    wbg_number = models.CharField(max_length=100, blank=True, null=True)
    wbg_day = models.DateField()
    dmw_classification = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_male = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_female = models.CharField(max_length=100, blank=True, null=True)
    dept_tmw_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_male = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_female = models.CharField(max_length=100, blank=True, null=True)
    dept_adnpe_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_male = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_female = models.CharField(max_length=100, blank=True, null=True)
    cont_tmw_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_male = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_female = models.CharField(max_length=100, blank=True, null=True)
    cont_adnpe_total_male_female = models.CharField(max_length=100, blank=True, null=True)
    no_of_days_worked = models.CharField(max_length=100, blank=True, null=True)
    no_of_shift_worked = models.CharField(max_length=100, blank=True, null=True)
    place_name1 = models.CharField(max_length=100, blank=True, null=True)
    place_name1_electrical = models.CharField(max_length=100, blank=True, null=True)
    place_name1_ongs = models.CharField(max_length=100, blank=True, null=True)
    place_name1_comp_air = models.CharField(max_length=100, blank=True, null=True)
    place_name2 = models.CharField(max_length=100, blank=True, null=True)
    place_name2_electrical = models.CharField(max_length=100, blank=True, null=True)
    place_name2_ongs = models.CharField(max_length=100, blank=True, null=True)
    place_name2_comp_air = models.CharField(max_length=100, blank=True, null=True)
    total_electrical = models.CharField(max_length=100, blank=True, null=True)
    total_ongs = models.CharField(max_length=100, blank=True, null=True)
    total_comp_air = models.CharField(max_length=100, blank=True, null=True)
    lighting = models.CharField(max_length=100, blank=True, null=True)
    power = models.CharField(max_length=100, blank=True, null=True)
    drillig_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    drillig_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    workover_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    workover_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    other_rigs_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    other_rigs_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    wells_drilled_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    wells_drilled_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    wells_abandoned_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    wells_abandoned_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    gas_wells_completed_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    gas_wells_completed_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    oil_wells_completed_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    oil_wells_completed_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    gas_wells_production_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    gas_wells_production_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    oil_wells_production_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    oil_wells_production_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    oil_wells_production_discontinued_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    oil_wells_production_discontinued_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    f_l_l_well_gathering_station_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    f_l_l_well_gathering_station_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    p_l_well_gathering_station_central_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    p_l_well_gathering_station_central_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    other_type_of_rig = models.CharField(max_length=100, blank=True, null=True)
    other_total_no_of_units_in_use = models.CharField(max_length=100, blank=True, null=True)
    dp_oil_mt_opening = models.CharField(max_length=100, blank=True, null=True)
    dp_oil_mt_prod = models.CharField(max_length=100, blank=True, null=True)
    dp_oil_mt_value = models.CharField(max_length=100, blank=True, null=True)
    dp_oil_mt_to_refinery = models.CharField(max_length=100, blank=True, null=True)
    dp_oil_mt_to_marketing = models.CharField(max_length=100, blank=True, null=True)
    dp_oil_mt_for_house_consumption = models.CharField(max_length=100, blank=True, null=True)
    dp_oil_mt_closing = models.CharField(max_length=100, blank=True, null=True)
    dp_gas_opening = models.CharField(max_length=100, blank=True, null=True)
    dp_gas_prod = models.CharField(max_length=100, blank=True, null=True)
    dp_gas_value = models.CharField(max_length=100, blank=True, null=True)
    dp_gas_to_refinery = models.CharField(max_length=100, blank=True, null=True)
    dp_gas_to_marketing = models.CharField(max_length=100, blank=True, null=True)
    dp_gas_for_house_consumption = models.CharField(max_length=100, blank=True, null=True)
    dp_gas_closing = models.CharField(max_length=100, blank=True, null=True)
    ime_npe_dept = models.CharField(max_length=100, blank=True, null=True)
    ime_npe_cont = models.CharField(max_length=100, blank=True, null=True)
    ime_npru_dept = models.CharField(max_length=100, blank=True, null=True)
    ime_npru_cont = models.CharField(max_length=100, blank=True, null=True)
    ime_npau_dept = models.CharField(max_length=100, blank=True, null=True)
    ime_npau_cont = models.CharField(max_length=100, blank=True, null=True)
    ime_no_of_p_d_m_unfit = models.CharField(max_length=100, blank=True, null=True)
    pme_npe_dept = models.CharField(max_length=100, blank=True, null=True)
    pme_npe_cont = models.CharField(max_length=100, blank=True, null=True)
    pme_npru_dept = models.CharField(max_length=100, blank=True, null=True)
    pme_npru_cont = models.CharField(max_length=100, blank=True, null=True)
    pme_npau_dept = models.CharField(max_length=100, blank=True, null=True)
    pme_npau_cont = models.CharField(max_length=100, blank=True, null=True)
    pme_no_of_p_d_m_unfit = models.CharField(max_length=100, blank=True, null=True)
    no_of_workmen_req = models.CharField(max_length=100, blank=True, null=True)
    no_of_workmen_provide = models.CharField(max_length=100, blank=True, null=True)
    no_of_satfy_c_meeting_conduct = models.CharField(max_length=100, blank=True, null=True)
    npe_bvt_dept = models.CharField(max_length=100, blank=True, null=True)
    npe_bvt_cont = models.CharField(max_length=100, blank=True, null=True)
    npruvt_bvt_dept = models.CharField(max_length=100, blank=True, null=True)
    npruvt_bvt_cont = models.CharField(max_length=100, blank=True, null=True)
    npauvt_bvt_dept = models.CharField(max_length=100, blank=True, null=True)
    npauvt_bvt_cont = models.CharField(max_length=100, blank=True, null=True)
    npe_rt_dept = models.CharField(max_length=100, blank=True, null=True)
    npe_rt_cont = models.CharField(max_length=100, blank=True, null=True)
    npruvt_rt_dept = models.CharField(max_length=100, blank=True, null=True)
    npruvt_rt_cont = models.CharField(max_length=100, blank=True, null=True)
    npauvt_rt_dept = models.CharField(max_length=100, blank=True, null=True)
    npauvt_rt_cont = models.CharField(max_length=100, blank=True, null=True)
    mine_name = models.ForeignKey('Minedetails', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_oilmines_annual_annexure_iii'


class DgmsOilminesAnnualAnnexureIiiSubtable1(models.Model):
    base_column_id = models.IntegerField(blank=True, null=True)
    spem_designation = models.CharField(max_length=100, blank=True, null=True)
    spem_no_requried = models.CharField(max_length=100, blank=True, null=True)
    spem_no_available = models.CharField(max_length=100, blank=True, null=True)
    spem_short_surplus = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_oilmines_annual_annexure_iii_subtable_1'


class DgmsOilminesAnnualAnnexureIiiSubtable2(models.Model):
    base_column_id = models.IntegerField(blank=True, null=True)
    accident_statistics_year = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_fatal_number = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_fatal_no_of_persion_killed = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_fatal_no_of_persion_injured = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_serious = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_serious_injured = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_reportable_number = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_reportable_injured = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_minor_number = models.CharField(max_length=100, blank=True, null=True)
    accident_statistics_minor_injured = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_oilmines_annual_annexure_iii_subtable_2'


class DgmsVentilation(models.Model):
    location = models.CharField(max_length=500, blank=True, null=True)
    quantity = models.CharField(max_length=500, blank=True, null=True)
    velocity = models.CharField(max_length=500, blank=True, null=True)
    t_wet = models.CharField(max_length=500, blank=True, null=True)
    t_dry = models.CharField(max_length=500, blank=True, null=True)
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()
    mine_name = models.ForeignKey('Minedetails', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'dgms_ventilation'


class DistributionDetails(models.Model):
    distribution_date = models.DateField(blank=True, null=True)
    mine_id = models.IntegerField(blank=True, null=True)
    mine_name = models.CharField(max_length=100, blank=True, null=True)
    branch_name = models.CharField(max_length=100, blank=True, null=True)
    prod_category = models.CharField(max_length=100, blank=True, null=True)
    prod_name = models.CharField(max_length=100, blank=True, null=True)
    batch_number = models.CharField(max_length=100, blank=True, null=True)
    assign_quantity = models.IntegerField(blank=True, null=True)
    quantity = models.CharField(max_length=100, blank=True, null=True)
    prod_unique_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'distribution_details'


class DjangoAdminLog(models.Model):
    action_time = models.DateTimeField()
    object_id = models.TextField(blank=True, null=True)
    object_repr = models.CharField(max_length=200)
    action_flag = models.PositiveSmallIntegerField()
    change_message = models.TextField()
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING, blank=True, null=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'django_admin_log'


class DjangoContentType(models.Model):
    app_label = models.CharField(max_length=100)
    model = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'django_content_type'
        unique_together = (('app_label', 'model'),)


class DjangoMigrations(models.Model):
    app = models.CharField(max_length=255)
    name = models.CharField(max_length=255)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_migrations'


class DjangoSession(models.Model):
    session_key = models.CharField(primary_key=True, max_length=40)
    session_data = models.TextField()
    expire_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_session'


class Emails(models.Model):
    type = models.CharField(max_length=1000, blank=True, null=True)
    email = models.CharField(max_length=1000, blank=True, null=True)
    email_to = models.CharField(max_length=1000, blank=True, null=True)
    email_from = models.CharField(max_length=1000, blank=True, null=True)
    sent_on = models.DateTimeField(blank=True, null=True)
    attachment = models.CharField(max_length=100, blank=True, null=True)
    user_id = models.ForeignKey(AuthUser, models.DO_NOTHING, blank=True, null=True)
    subject = models.CharField(max_length=1000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'emails'


class Employee(models.Model):
    empid = models.CharField(max_length=100)
    name = models.CharField(max_length=100)
    father_name = models.CharField(max_length=100, blank=True, null=True)
    dob = models.DateField(blank=True, null=True)
    address = models.CharField(max_length=200, blank=True, null=True)
    email = models.CharField(max_length=254)
    mob = models.CharField(max_length=100, blank=True, null=True)
    state = models.CharField(max_length=100)
    city = models.TextField()
    pin = models.TextField(blank=True, null=True)
    gender = models.CharField(max_length=128, blank=True, null=True)
    marital_status = models.CharField(max_length=128, blank=True, null=True)
    photo = models.CharField(max_length=100, blank=True, null=True)
    rfid = models.TextField(blank=True, null=True)
    designation = models.TextField(blank=True, null=True)
    token_no = models.TextField(blank=True, null=True)
    date_of_joining = models.DateField(blank=True, null=True)
    retirement_date = models.DateField(blank=True, null=True)
    job_type = models.CharField(max_length=128, blank=True, null=True)
    cat_type = models.TextField(blank=True, null=True)
    is_rescue = models.CharField(max_length=10)
    blood_group = models.CharField(max_length=200, blank=True, null=True)
    medical_status = models.TextField()
    aadhaar_no = models.CharField(max_length=20, blank=True, null=True)
    pan_no = models.CharField(max_length=20, blank=True, null=True)
    voter_id_no = models.CharField(max_length=20, blank=True, null=True)
    medical_ins_no = models.CharField(max_length=30, blank=True, null=True)
    bank_name = models.CharField(max_length=50, blank=True, null=True)
    bank_ac_no = models.CharField(max_length=30, blank=True, null=True)
    bank_ifsc = models.CharField(max_length=20, blank=True, null=True)
    bank_pf_no = models.CharField(max_length=20, blank=True, null=True)
    edu_course_name = models.CharField(max_length=50, blank=True, null=True)
    edu_board_name = models.CharField(max_length=50, blank=True, null=True)
    edu_year = models.CharField(max_length=20, blank=True, null=True)
    edu_percent = models.CharField(max_length=20, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    immediate_staff = models.ForeignKey('self', models.DO_NOTHING, blank=True, null=True)
    mine = models.ForeignKey('Minedetails', models.DO_NOTHING, blank=True, null=True)
    mining_role = models.ForeignKey('Miningrole', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'employee'


class EmployeeEmployee(models.Model):
    fname = models.CharField(max_length=200)
    lname = models.CharField(max_length=200)
    age = models.IntegerField()
    doj = models.DateField()
    rfid = models.CharField(max_length=200)
    address = models.TextField()
    state = models.CharField(max_length=200)
    email = models.CharField(max_length=254)
    pin = models.IntegerField()
    mob = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'employee_employee'


class Employeeshiftassign(models.Model):
    employee_id = models.IntegerField()
    mine_shift_id = models.IntegerField()
    shift_time = models.CharField(max_length=200)
    assign_date = models.DateField()
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'employeeshiftassign'


class FireExpGases(models.Model):
    o2 = models.FloatField()
    co = models.FloatField()
    ch4 = models.FloatField()
    co2 = models.FloatField()
    h2 = models.FloatField()
    n2 = models.FloatField()
    c2h4 = models.FloatField()
    graham_ratio = models.FloatField()
    graham_msg = models.TextField()
    young_ratio = models.FloatField()
    young_msg = models.TextField()
    coco2_ratio = models.FloatField()
    coco2_msg = models.TextField()
    jtr_ratio = models.FloatField()
    jtr_msg = models.TextField()
    chra_ratio = models.FloatField()
    chra_msg = models.TextField()
    explosm_result = models.TextField()
    date = models.DateField()

    class Meta:
        managed = False
        db_table = 'fire_exp_gases'


class FireExpGaseswifi(models.Model):
    area_id = models.IntegerField(db_column='Area_id', blank=True, null=True)  # Field name made lowercase.
    o2 = models.FloatField()
    co = models.FloatField()
    ch4 = models.FloatField()
    co2 = models.FloatField()
    h2 = models.FloatField()
    n2 = models.FloatField()
    c2h4 = models.FloatField()
    graham_ratio = models.FloatField()
    graham_msg = models.TextField()
    young_ratio = models.FloatField()
    young_msg = models.TextField()
    coco2_ratio = models.FloatField()
    coco2_msg = models.TextField()
    jtr_ratio = models.FloatField()
    jtr_msg = models.TextField()
    chra_ratio = models.FloatField()
    chra_msg = models.TextField()
    explosm_result = models.TextField()
    date = models.DateField()

    class Meta:
        managed = False
        db_table = 'fire_exp_gaseswifi'


class FireExpManual(models.Model):
    o2 = models.FloatField()
    co = models.FloatField()
    ch4 = models.FloatField()
    co2 = models.FloatField()
    h2 = models.FloatField()
    n2 = models.FloatField()
    c2h4 = models.FloatField()
    date = models.DateField()

    class Meta:
        managed = False
        db_table = 'fire_exp_manual'


class FireexpArea(models.Model):
    areaname = models.CharField(db_column='areaName', max_length=400, blank=True, null=True)  # Field name made lowercase.
    desc = models.CharField(max_length=400, blank=True, null=True)
    ipaddress = models.CharField(db_column='IpAddress', max_length=200, blank=True, null=True)  # Field name made lowercase.
    mine_id = models.ForeignKey('Minedetails', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fireexp_area'


class GasmodelAuto(models.Model):
    mine_id = models.IntegerField()
    node_id = models.IntegerField()
    gas_name = models.CharField(max_length=10)
    gas_value = models.CharField(max_length=50)
    date_time = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'gasmodel_auto'


class GasmonitoringAuto(models.Model):
    ch4 = models.FloatField(db_column='CH4')  # Field name made lowercase.
    ch4_alert = models.CharField(db_column='CH4_ALERT', max_length=10)  # Field name made lowercase.
    co = models.FloatField(db_column='CO')  # Field name made lowercase.
    co_alert = models.CharField(db_column='CO_ALERT', max_length=10)  # Field name made lowercase.
    co2 = models.FloatField(db_column='CO2')  # Field name made lowercase.
    co2_alert = models.CharField(db_column='CO2_ALERT', max_length=10)  # Field name made lowercase.
    o2 = models.FloatField(db_column='O2')  # Field name made lowercase.
    o2_alert = models.CharField(db_column='O2_ALERT', max_length=10)  # Field name made lowercase.
    h2s = models.FloatField(db_column='H2S')  # Field name made lowercase.
    h2s_alert = models.CharField(db_column='H2S_ALERT', max_length=10)  # Field name made lowercase.
    no2 = models.FloatField(db_column='NO2')  # Field name made lowercase.
    no2_alert = models.CharField(db_column='NO2_ALERT', max_length=10)  # Field name made lowercase.
    so2 = models.FloatField(db_column='SO2')  # Field name made lowercase.
    so2_alert = models.CharField(db_column='SO2_ALERT', max_length=10)  # Field name made lowercase.
    h2 = models.FloatField(db_column='H2')  # Field name made lowercase.
    h2_alert = models.CharField(db_column='H2_ALERT', max_length=10)  # Field name made lowercase.
    he = models.FloatField(db_column='He')  # Field name made lowercase.
    he_alert = models.CharField(db_column='He_ALERT', max_length=10)  # Field name made lowercase.
    dt = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'gasmonitoring_auto'


class GasmonitoringManual(models.Model):
    ch4 = models.FloatField(db_column='CH4')  # Field name made lowercase.
    ch4_alert = models.CharField(db_column='CH4_ALERT', max_length=10)  # Field name made lowercase.
    co = models.FloatField(db_column='CO')  # Field name made lowercase.
    co_alert = models.CharField(db_column='CO_ALERT', max_length=10)  # Field name made lowercase.
    co2 = models.FloatField(db_column='CO2')  # Field name made lowercase.
    co2_alert = models.CharField(db_column='CO2_ALERT', max_length=10)  # Field name made lowercase.
    o2 = models.FloatField(db_column='O2')  # Field name made lowercase.
    o2_alert = models.CharField(db_column='O2_ALERT', max_length=10)  # Field name made lowercase.
    h2s = models.FloatField(db_column='H2S')  # Field name made lowercase.
    h2s_alert = models.CharField(db_column='H2S_ALERT', max_length=10)  # Field name made lowercase.
    no2 = models.FloatField(db_column='NO2')  # Field name made lowercase.
    no2_alert = models.CharField(db_column='NO2_ALERT', max_length=10)  # Field name made lowercase.
    so2 = models.FloatField(db_column='SO2')  # Field name made lowercase.
    so2_alert = models.CharField(db_column='SO2_ALERT', max_length=10)  # Field name made lowercase.
    h2 = models.FloatField(db_column='H2')  # Field name made lowercase.
    h2_alert = models.CharField(db_column='H2_ALERT', max_length=10)  # Field name made lowercase.
    he = models.FloatField(db_column='He')  # Field name made lowercase.
    he_alert = models.CharField(db_column='He_ALERT', max_length=10)  # Field name made lowercase.
    dt = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'gasmonitoring_manual'


class HitcountBlacklistIp(models.Model):
    ip = models.CharField(unique=True, max_length=40)

    class Meta:
        managed = False
        db_table = 'hitcount_blacklist_ip'


class HitcountBlacklistUserAgent(models.Model):
    user_agent = models.CharField(unique=True, max_length=255)

    class Meta:
        managed = False
        db_table = 'hitcount_blacklist_user_agent'


class HitcountHit(models.Model):
    created = models.DateTimeField()
    ip = models.CharField(max_length=40)
    session = models.CharField(max_length=40)
    user_agent = models.CharField(max_length=255)
    hitcount = models.ForeignKey('HitcountHitCount', models.DO_NOTHING)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hitcount_hit'


class HitcountHitCount(models.Model):
    hits = models.PositiveIntegerField()
    modified = models.DateTimeField()
    object_pk = models.PositiveIntegerField()
    content_type = models.ForeignKey(DjangoContentType, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'hitcount_hit_count'
        unique_together = (('content_type', 'object_pk'),)


class Minedetails(models.Model):
    name = models.CharField(max_length=200)
    area = models.CharField(max_length=200, blank=True, null=True)
    state = models.CharField(max_length=200, blank=True, null=True)
    latitude = models.FloatField(blank=True, null=True)
    longitude = models.FloatField(blank=True, null=True)
    mine_map_image = models.CharField(max_length=100, blank=True, null=True)
    mine_map_unit = models.FloatField(blank=True, null=True)
    village_area_road = models.CharField(max_length=200, blank=True, null=True)
    tehsil_taluka_subdivision = models.CharField(max_length=200, blank=True, null=True)
    district = models.CharField(max_length=200, blank=True, null=True)
    pin = models.CharField(max_length=200, blank=True, null=True)
    date_of_opening = models.DateField(blank=True, null=True)
    lin_no = models.CharField(max_length=200, blank=True, null=True)
    created_at = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'minedetails'


class MinerTracking(models.Model):
    mine_id = models.IntegerField()
    router_id = models.CharField(max_length=200)
    transmitter_id = models.CharField(max_length=200)
    emergency = models.IntegerField()
    ip_add = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'miner_tracking'


class Mineshift(models.Model):
    shift_name = models.CharField(max_length=200)
    mine_id = models.IntegerField()
    time_from = models.CharField(max_length=20)
    time_to = models.CharField(max_length=20)
    description = models.TextField(blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'mineshift'


class Miningrole(models.Model):
    name = models.CharField(max_length=200)
    type = models.CharField(max_length=100)
    description = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    parent_role = models.ForeignKey('self', models.DO_NOTHING, blank=True, null=True)
    mine = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'miningrole'


class NewsBulletin(models.Model):
    news = models.CharField(max_length=1000, blank=True, null=True)
    created_on = models.DateField(blank=True, null=True)
    updated_on = models.DateField(blank=True, null=True)
    valid_till = models.DateField(blank=True, null=True)
    download_link = models.CharField(max_length=100, blank=True, null=True)
    download_number = models.IntegerField(blank=True, null=True)
    user_id = models.ForeignKey(AuthUser, models.DO_NOTHING, blank=True, null=True)
    color = models.CharField(max_length=200)

    class Meta:
        managed = False
        db_table = 'news_bulletin'


class Notification(models.Model):
    type = models.IntegerField()
    message = models.CharField(db_column='Message', max_length=100)  # Field name made lowercase.
    time = models.DateTimeField()
    isread = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'notification'


class ProductDetails(models.Model):
    business_name = models.IntegerField(blank=True, null=True)
    prod_name = models.CharField(max_length=100, blank=True, null=True)
    alternate_prod = models.CharField(max_length=100, blank=True, null=True)
    unit = models.CharField(max_length=100, blank=True, null=True)
    invoice_no = models.CharField(max_length=100, blank=True, null=True)
    prod_expiry = models.DateField(blank=True, null=True)
    quantity = models.IntegerField(blank=True, null=True)
    price = models.FloatField(blank=True, null=True)
    batch_number = models.CharField(max_length=100, blank=True, null=True)
    barcode = models.CharField(max_length=100, blank=True, null=True)
    tax = models.CharField(max_length=100, blank=True, null=True)
    rate = models.FloatField(blank=True, null=True)
    total_tax = models.FloatField(blank=True, null=True)
    net_amount = models.FloatField(blank=True, null=True)
    info_any = models.CharField(max_length=200, blank=True, null=True)
    entry_date = models.DateField(blank=True, null=True)
    initial_quantity = models.IntegerField(blank=True, null=True)
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)
    prod_category = models.ForeignKey(CategoryDetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'product_details'


class ProductionDailydispatch(models.Model):
    shift_name = models.CharField(max_length=100, blank=True, null=True)
    production_type = models.CharField(max_length=100, blank=True, null=True)
    total_weight = models.IntegerField(blank=True, null=True)
    dates = models.DateField()
    weight_unit = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'production_dailydispatch'


class ProductionDailyentry(models.Model):
    shift_name = models.CharField(max_length=100, blank=True, null=True)
    production_type = models.CharField(max_length=100, blank=True, null=True)
    total_weight = models.IntegerField(blank=True, null=True)
    dates = models.DateField()
    weight_unit = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'production_dailyentry'


class ProductionManualentry(models.Model):
    weighbridge_id = models.CharField(max_length=100)
    vehicle_id = models.CharField(max_length=100)
    datetime_in = models.DateTimeField()
    datetime_out = models.DateTimeField()
    trip_time = models.CharField(max_length=200, blank=True, null=True)
    tm_name = models.CharField(max_length=200, blank=True, null=True)
    wb_code = models.CharField(max_length=100, blank=True, null=True)
    first_wt = models.IntegerField()
    second_wt = models.IntegerField()
    net_wt = models.IntegerField()
    weight_unit = models.CharField(max_length=200, blank=True, null=True)
    type = models.CharField(max_length=100, blank=True, null=True)
    production_type = models.CharField(max_length=100, blank=True, null=True)
    entry_date = models.DateField()
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'production_manualentry'


class ProductionMaterialWaste(models.Model):
    vehicle_id = models.CharField(max_length=100)
    weighbridge_id = models.CharField(max_length=100)
    net_weight = models.IntegerField(blank=True, null=True)
    unit = models.CharField(max_length=100)
    production_type = models.CharField(max_length=100, blank=True, null=True)
    datetime_in = models.DateTimeField()
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'production_material_waste'


class ProductionMonthly(models.Model):
    production_type = models.CharField(max_length=100, blank=True, null=True)
    total_weight = models.IntegerField(blank=True, null=True)
    month = models.CharField(max_length=100, blank=True, null=True)
    years = models.CharField(max_length=100, blank=True, null=True)
    weight_unit = models.CharField(max_length=200, blank=True, null=True)
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'production_monthly'


class ProductionMonthlydispatch(models.Model):
    production_type = models.CharField(max_length=100, blank=True, null=True)
    total_weight = models.IntegerField(blank=True, null=True)
    month = models.CharField(max_length=100, blank=True, null=True)
    years = models.CharField(max_length=100, blank=True, null=True)
    weight_unit = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'production_monthlydispatch'


class ProductionTub(models.Model):
    laden_weight = models.CharField(max_length=100)
    no_of_trip = models.IntegerField(blank=True, null=True)
    total_weight = models.IntegerField(blank=True, null=True)
    destination = models.CharField(max_length=200)
    datetime_in = models.DateTimeField()
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)
    name_of_the_tub = models.ForeignKey(ContainerDetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'production_tub'


class ProductionVehicle(models.Model):
    rfid = models.TextField(blank=True, null=True)
    vehicle_reg_no = models.CharField(max_length=200, blank=True, null=True)
    type_of_vehicle = models.CharField(max_length=200, blank=True, null=True)
    reg_laden_weight_of_the_vehicle = models.FloatField(blank=True, null=True)
    reg_laden_weight_of_the_vehicles = models.CharField(max_length=200, blank=True, null=True)
    o_name = models.CharField(max_length=100)
    o_address = models.CharField(max_length=100, blank=True, null=True)
    o_email = models.CharField(max_length=254, blank=True, null=True)
    o_mob = models.CharField(max_length=100, blank=True, null=True)
    d_name = models.CharField(max_length=100)
    d_address = models.CharField(max_length=100, blank=True, null=True)
    d_email = models.CharField(max_length=254, blank=True, null=True)
    d_mob = models.CharField(max_length=100, blank=True, null=True)
    d_photo = models.CharField(max_length=100, blank=True, null=True)
    t_name = models.CharField(max_length=100)
    t_address = models.CharField(max_length=100, blank=True, null=True)
    t_email = models.CharField(max_length=254, blank=True, null=True)
    w_no = models.CharField(max_length=200, blank=True, null=True)
    dates = models.DateField()
    party_details = models.CharField(max_length=200, blank=True, null=True)
    sale = models.CharField(max_length=200, blank=True, null=True)
    grade = models.CharField(max_length=200, blank=True, null=True)
    source = models.CharField(max_length=200, blank=True, null=True)
    destination = models.CharField(max_length=200, blank=True, null=True)
    validity = models.DateField()
    start_date_of_order = models.DateField()
    end_date_of_order = models.DateField()
    value_of_order = models.CharField(max_length=200, blank=True, null=True)
    validity_of_tag = models.DateField()
    trip_cycle = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'production_vehicle'


class ProductionWeighbridge(models.Model):
    w_name = models.CharField(max_length=100)
    location = models.CharField(max_length=100)
    desc = models.CharField(max_length=100, blank=True, null=True)
    wb_code = models.CharField(max_length=100, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'production_weighbridge'


class ProductionYearlydispatch(models.Model):
    production_type = models.CharField(max_length=100, blank=True, null=True)
    total_weight = models.IntegerField(blank=True, null=True)
    years = models.CharField(max_length=100, blank=True, null=True)
    weight_unit = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'production_yearlydispatch'


class ProductionYearlyentry(models.Model):
    production_type = models.CharField(max_length=100, blank=True, null=True)
    total_weight = models.IntegerField(blank=True, null=True)
    years = models.CharField(max_length=100, blank=True, null=True)
    weight_unit = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'production_yearlyentry'


class ProfileExtension(models.Model):
    profile_avatar = models.CharField(max_length=100, blank=True, null=True)
    user_id = models.ForeignKey(AuthUser, models.DO_NOTHING, blank=True, null=True)
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'profile_extension'


class ReorderDetails(models.Model):
    reorder_date = models.DateTimeField(db_column='Reorder_date')  # Field name made lowercase.
    creationdate = models.DateTimeField()
    mine_id = models.CharField(max_length=100, blank=True, null=True)
    prod_category = models.CharField(max_length=100, blank=True, null=True)
    product_id = models.IntegerField(blank=True, null=True)
    prod_name = models.CharField(max_length=100, blank=True, null=True)
    barcode = models.CharField(max_length=100, blank=True, null=True)
    batch_number = models.CharField(max_length=100, blank=True, null=True)
    quantity = models.IntegerField(blank=True, null=True)
    addedstock = models.IntegerField(blank=True, null=True)
    updated_quantity = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'reorder_details'


class RescueRecords(models.Model):
    shift_id = models.IntegerField(blank=True, null=True)
    area = models.CharField(max_length=255, blank=True, null=True)
    date_fr = models.DateTimeField(blank=True, null=True)
    date_to = models.DateTimeField(blank=True, null=True)
    rescue_dep_num = models.IntegerField(blank=True, null=True)
    rescue_person_name = models.CharField(max_length=255, blank=True, null=True)
    incident_type = models.CharField(max_length=255, blank=True, null=True)
    employee_rescued_num = models.IntegerField(blank=True, null=True)
    rescued_employees_name = models.CharField(max_length=255, blank=True, null=True)
    mine = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'rescue_records'


class SensorArduino(models.Model):
    node_id = models.IntegerField(blank=True, null=True)
    arduino_id = models.CharField(max_length=200)
    type = models.CharField(max_length=200)
    noofsensors = models.IntegerField()
    port_no = models.CharField(max_length=200)
    baudrate = models.IntegerField()
    photo = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sensor_arduino'


class SensorConnection(models.Model):
    mine_id = models.IntegerField(blank=True, null=True)
    node_id = models.IntegerField(blank=True, null=True)
    type = models.CharField(max_length=200, blank=True, null=True)
    arduino_id = models.IntegerField(blank=True, null=True)
    wireless_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sensor_connection'


class SensorNode(models.Model):
    nodeid = models.CharField(max_length=200)
    name = models.CharField(max_length=200)
    location = models.CharField(max_length=200)
    x_axis = models.FloatField()
    y_axis = models.FloatField()
    photo1 = models.CharField(max_length=100, blank=True, null=True)
    photo2 = models.CharField(max_length=100, blank=True, null=True)
    description = models.TextField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING)
    isgoaf = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'sensor_node'
        unique_together = (('nodeid', 'mine_id'),)


class SensorNodesensor(models.Model):
    nodesensorname = models.CharField(max_length=200)
    thresholdvalue = models.CharField(max_length=200)
    alertcolourpriority = models.CharField(max_length=200)
    description = models.TextField()
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField(blank=True, null=True)
    name = models.ForeignKey(SensorNode, models.DO_NOTHING, blank=True, null=True)
    sensorid = models.ForeignKey('SensorSensor', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sensor_nodesensor'


class SensorSensor(models.Model):
    arduino_id = models.IntegerField(blank=True, null=True)
    wireless_id = models.IntegerField(blank=True, null=True)
    sensorid = models.CharField(max_length=200)
    sensorname = models.CharField(max_length=200)
    minrange = models.IntegerField()
    maxrange = models.IntegerField()
    sensorunit = models.CharField(max_length=200)
    thresholdlimit = models.CharField(max_length=200)
    greenlevel = models.CharField(max_length=200)
    yellowlevel = models.CharField(max_length=200)
    redlevel = models.CharField(max_length=200)
    photo = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sensor_sensor'


class SensorSensorNode(models.Model):
    ip_add = models.CharField(max_length=200)
    sensorid = models.CharField(max_length=200)
    sensorname = models.CharField(max_length=200)
    sensorunit = models.CharField(max_length=200)
    thresholdlimit = models.CharField(max_length=200)
    sensorunit1 = models.CharField(max_length=200)
    sensorunit2 = models.CharField(max_length=200)
    sensorunit3 = models.CharField(max_length=200)
    sensormsg1 = models.CharField(max_length=200)
    sensormsg2 = models.CharField(max_length=200)
    sensormsg3 = models.CharField(max_length=200)
    greenlevel = models.CharField(max_length=200)
    yellowlevel = models.CharField(max_length=200)
    redlevel = models.CharField(max_length=200)
    description = models.TextField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING)
    node_id = models.ForeignKey(SensorNode, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'sensor_sensor_node'
        unique_together = (('mine_id', 'node_id', 'sensorid'),)


class SensorSensordata(models.Model):
    temp = models.CharField(max_length=200)
    pressure = models.CharField(max_length=200)
    date = models.DateField()

    class Meta:
        managed = False
        db_table = 'sensor_sensordata'


class SensorWireless(models.Model):
    node_id = models.IntegerField(blank=True, null=True)
    ipaddress = models.CharField(max_length=200)
    name = models.CharField(max_length=200)

    class Meta:
        managed = False
        db_table = 'sensor_wireless'


class Sensordata(models.Model):
    data1 = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'sensordata'


class Setting(models.Model):
    name = models.CharField(max_length=500, blank=True, null=True)
    value = models.CharField(max_length=500, blank=True, null=True)
    desc = models.CharField(max_length=500, blank=True, null=True)
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'setting'


class SmsConfiguration(models.Model):
    url = models.CharField(max_length=1000, blank=True, null=True)
    auth_key = models.CharField(max_length=255, blank=True, null=True)
    sender_id = models.CharField(max_length=255, blank=True, null=True)
    valid_till = models.DateField(blank=True, null=True)
    counter = models.IntegerField(blank=True, null=True)
    limit = models.IntegerField(blank=True, null=True)
    created_date = models.DateField(blank=True, null=True)
    user_id = models.ForeignKey(AuthUser, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sms_configuration'


class SnippetsComment(models.Model):
    text = models.TextField()
    commented_at = models.DateTimeField()
    commented_by = models.ForeignKey(AuthUser, models.DO_NOTHING)
    commented_to = models.ForeignKey('SnippetsSnippet', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'snippets_comment'


class SnippetsSnippet(models.Model):
    title = models.CharField(max_length=128)
    code = models.TextField()
    description = models.TextField()
    created_at = models.DateTimeField()
    updated_at = models.DateTimeField()
    created_by = models.ForeignKey(AuthUser, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'snippets_snippet'


class StrataLocation(models.Model):
    location_name = models.CharField(max_length=200)
    tag_no = models.CharField(max_length=200, blank=True, null=True)
    x_axis = models.FloatField(blank=True, null=True)
    y_axis = models.FloatField(blank=True, null=True)
    description = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateField()
    modified_date = models.DateTimeField()
    mine_name = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'strata_location'


class StrataSensor(models.Model):
    sensor_name = models.CharField(max_length=200)
    sensor_unit = models.CharField(max_length=50)
    tag_no = models.CharField(max_length=200, blank=True, null=True)
    level_1_warning_unit = models.IntegerField()
    level_2_warning_unit = models.IntegerField()
    level_3_warning_unit = models.IntegerField()
    level_1_color = models.CharField(max_length=50, blank=True, null=True)
    level_2_color = models.CharField(max_length=50, blank=True, null=True)
    level_3_color = models.CharField(max_length=50, blank=True, null=True)
    level_1_msg = models.CharField(max_length=200, blank=True, null=True)
    level_2_msg = models.CharField(max_length=200, blank=True, null=True)
    level_3_msg = models.CharField(max_length=200, blank=True, null=True)
    level_1_audio = models.CharField(max_length=100, blank=True, null=True)
    level_2_audio = models.CharField(max_length=100, blank=True, null=True)
    level_3_audio = models.CharField(max_length=100, blank=True, null=True)
    ip_address = models.CharField(max_length=100)
    interval_time = models.IntegerField(blank=True, null=True)
    audio_play_type = models.CharField(max_length=10)
    description = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    location_id = models.ForeignKey(StrataLocation, models.DO_NOTHING, blank=True, null=True)
    mine_name = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'strata_sensor'


class StrataSensorData(models.Model):
    sensor_id = models.IntegerField()
    sensor_value = models.CharField(max_length=50, blank=True, null=True)
    created_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'strata_sensor_data'


class StrataSensorFlag(models.Model):
    sensor_id = models.IntegerField()
    limit = models.IntegerField()
    type = models.CharField(max_length=10, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    pause_waring_duration_end_datetime = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'strata_sensor_flag'


class SupplierDetails(models.Model):
    business_name = models.CharField(max_length=100, blank=True, null=True)
    business_website = models.CharField(max_length=100, blank=True, null=True)
    name = models.CharField(max_length=200, blank=True, null=True)
    mobile_no = models.BigIntegerField(blank=True, null=True)
    email = models.CharField(max_length=254, blank=True, null=True)
    pincode = models.IntegerField(blank=True, null=True)
    address = models.CharField(max_length=400, blank=True, null=True)
    landmark = models.CharField(max_length=400, blank=True, null=True)
    area = models.CharField(max_length=200, blank=True, null=True)
    city = models.TextField()
    state = models.CharField(max_length=100)
    map_loc = models.CharField(max_length=400, blank=True, null=True)
    pan = models.CharField(max_length=200, blank=True, null=True)
    gstin = models.CharField(max_length=200, blank=True, null=True)
    notes = models.CharField(max_length=200, blank=True, null=True)
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'supplier_details'


class TempMonitoringManual(models.Model):
    wbt = models.FloatField()
    dbt = models.FloatField()
    relativehumidity = models.FloatField(db_column='relativeHumidity')  # Field name made lowercase.
    dewpointtemp = models.FloatField(db_column='dewPointTemp')  # Field name made lowercase.
    moisturecontent = models.FloatField(db_column='moistureContent')  # Field name made lowercase.
    enthalpy = models.FloatField()
    sigmaheat = models.FloatField(db_column='sigmaHeat')  # Field name made lowercase.
    rel_hum_status = models.CharField(max_length=100)
    dew_status = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'temp_monitoring_manual'


class Todo(models.Model):
    text = models.CharField(max_length=1000, blank=True, null=True)
    mode = models.CharField(max_length=100, blank=True, null=True)
    row_order = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'todo'


class TrackingRouter(models.Model):
    router_id = models.CharField(max_length=200)
    address = models.CharField(max_length=200)
    location = models.CharField(max_length=200, blank=True, null=True)
    is_block = models.CharField(max_length=100)
    x_axis = models.FloatField(blank=True, null=True)
    y_axis = models.FloatField(blank=True, null=True)
    ip_add = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'tracking_router'
        unique_together = (('mine_id', 'router_id'),)


class TrainingRescueAccident(models.Model):
    mine_id = models.IntegerField(blank=True, null=True)
    shift_id = models.IntegerField(blank=True, null=True)
    emp_id = models.IntegerField(blank=True, null=True)
    training_type = models.CharField(max_length=255, blank=True, null=True)
    training_date = models.CharField(max_length=255, blank=True, null=True)
    is_ab_pr = models.CharField(max_length=255, blank=True, null=True)
    training_ab_pr_from = models.CharField(max_length=255, blank=True, null=True)
    training_ab_pr_to = models.CharField(max_length=255, blank=True, null=True)
    training_remarks = models.CharField(max_length=255, blank=True, null=True)
    training_count = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'training_rescue_accident'


class WaterLevelAcquisitionData(models.Model):
    sensor_id = models.IntegerField()
    sensor_value = models.CharField(max_length=50, blank=True, null=True)
    created_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'water_level_acquisition_data'


class WaterLevelMonitoringSensor(models.Model):
    area_name = models.CharField(max_length=200, blank=True, null=True)
    distance_bet_roof_and_water = models.CharField(max_length=50, blank=True, null=True)
    alarm_water_level_1 = models.CharField(max_length=200, blank=True, null=True)
    alarm_water_level_2 = models.CharField(max_length=200, blank=True, null=True)
    alarm_water_level_3 = models.CharField(max_length=200, blank=True, null=True)
    level_1_msg = models.CharField(max_length=200, blank=True, null=True)
    level_2_msg = models.CharField(max_length=200, blank=True, null=True)
    level_3_msg = models.CharField(max_length=200, blank=True, null=True)
    level_1_audio = models.CharField(max_length=100, blank=True, null=True)
    level_2_audio = models.CharField(max_length=100, blank=True, null=True)
    level_3_audio = models.CharField(max_length=100, blank=True, null=True)
    ip_address = models.CharField(max_length=200, blank=True, null=True)
    desc = models.CharField(max_length=200, blank=True, null=True)
    audio_play_type = models.CharField(max_length=10)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()
    moter_start_level = models.CharField(max_length=200, blank=True, null=True)
    moter_stop_level = models.CharField(max_length=200, blank=True, null=True)
    mine_id = models.ForeignKey(Minedetails, models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'water_level_monitoring_sensor'


class Windroseaddsensor(models.Model):
    sensor_id = models.CharField(max_length=200, blank=True, null=True)
    sensor_name = models.CharField(max_length=200, blank=True, null=True)
    sensor_unit = models.CharField(max_length=200, blank=True, null=True)
    min_range = models.CharField(max_length=200, blank=True, null=True)
    max_range = models.CharField(max_length=200, blank=True, null=True)
    desc = models.CharField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'windroseaddsensor'


class Windrosedata(models.Model):
    setting_id = models.IntegerField(blank=True, null=True)
    rain_gauge = models.CharField(max_length=200, blank=True, null=True)
    pm2_5 = models.CharField(max_length=200, blank=True, null=True)
    pm10 = models.CharField(max_length=200, blank=True, null=True)
    humidity = models.CharField(max_length=200, blank=True, null=True)
    temperature = models.CharField(max_length=200, blank=True, null=True)
    ws_value = models.CharField(max_length=200, blank=True, null=True)
    wd_value = models.CharField(max_length=200, blank=True, null=True)
    no2 = models.CharField(max_length=200, blank=True, null=True)
    so2 = models.CharField(max_length=200, blank=True, null=True)
    date = models.DateField(blank=True, null=True)
    time = models.TimeField(blank=True, null=True)
    created_date = models.DateTimeField()
    modified_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'windrosedata'


class Windrosesetting(models.Model):
    ip_address = models.CharField(max_length=40, blank=True, null=True)
    wd_sensor_name = models.CharField(max_length=100, blank=True, null=True)
    wd_unit = models.CharField(max_length=10, blank=True, null=True)
    ws_sensor_name = models.CharField(max_length=15, blank=True, null=True)
    ws_unit = models.CharField(max_length=10, blank=True, null=True)
    rg_sensor_name = models.CharField(max_length=100, blank=True, null=True)
    rg_unit = models.CharField(max_length=10, blank=True, null=True)
    pm2_5_sensor_name = models.CharField(max_length=100, blank=True, null=True)
    pm2_5_unit = models.CharField(max_length=10, blank=True, null=True)
    pm10_sensor_name = models.CharField(max_length=100, blank=True, null=True)
    pm10_unit = models.CharField(max_length=10, blank=True, null=True)
    humidity_sensor_name = models.CharField(max_length=100, blank=True, null=True)
    humidity_unit = models.CharField(max_length=10, blank=True, null=True)
    temperature_sensor_name = models.CharField(max_length=100, blank=True, null=True)
    temperature_unit = models.CharField(max_length=10, blank=True, null=True)
    so2_sensor_name = models.CharField(max_length=100, blank=True, null=True)
    so2_unit = models.CharField(max_length=10, blank=True, null=True)
    no2_sensor_name = models.CharField(max_length=100, blank=True, null=True)
    no2_unit = models.CharField(max_length=10, blank=True, null=True)
    created_date = models.DateField(blank=True, null=True)
    modified_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'windrosesetting'
